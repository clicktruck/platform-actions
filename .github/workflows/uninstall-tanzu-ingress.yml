name: "uninstall-tanzu-ingress"

on:
  workflow_call:
    inputs:
      target-cloud:
        description: "Target cloud provider"
        type: string
        required: true
    secrets:
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
      AWS_SESSION_TOKEN:
        required: false
      AZURE_AD_CLIENT_ID:
        required: false
      AZURE_AD_CLIENT_SECRET:
        required: false
      AZURE_SUBSCRIPTION_ID:
        required: false
      AZURE_AD_TENANT_ID:
        required: false
      GOOGLE_PROJECT_ID:
        required: false
      GOOGLE_SERVICE_ACCOUNT_KEY:
        required: false
      KUBECONFIG_CONTENTS:
        required: true

jobs:
  encode-tanzu-ingress-uninstall-script:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    outputs:
      result: ${{ steps.encode.outputs.result }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Encode
      id: encode
      run: |
          result="$(cat scripts/uninstall-package.sh | base64 -w 0)"
          echo "result=${result}" >> $GITHUB_OUTPUT

  uninstall:
    needs: encode-tanzu-ingress-uninstall-script
    runs-on: ubuntu-22.04

    env:
      GITOPS_DIR: tanzu/ingress/${{ inputs.target-cloud }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-22.04, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout application-templates
      uses: actions/checkout@v4
      with:
        repository: clicktruck/application-templates

    - name: Checkout azure-actions
      if: inputs.cluster-provider == 'aks'
      uses: actions/checkout@v4
      with:
        repository: clicktruck/azure-actions

    - name: "Uninstall Tanzu Ingress on Azure"
      if: inputs.cluster-provider == 'aks'
      uses: ./docker/actions/azure/tanzu-runsh-setup-action
      with:
        azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        azure-tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
        azure-ad-client-id: ${{ secrets.AZURE_AD_CLIENT_ID }}
        azure-ad-client-secret: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
        script-contents: ${{ needs.encode-tanzu-ingress-uninstall-script.outputs.result }}
        script-arguments: "${{ env.GITOPS_DIR }} tanzu-ingress"
        kubeconfig-contents: "${{ secrets.KUBECONFIG_CONTENTS }}"

    - name: Checkout aws-actions
      if: inputs.cluster-provider == 'eks'
      uses: actions/checkout@v4
      with:
        repository: clicktruck/aws-actions

    - name: "Uninstall Tanzu Ingress on AWS"
      if: inputs.cluster-provider == 'eks'
      uses: ./docker/actions/aws/tanzu-runsh-setup-action
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        script-contents: ${{ needs.encode-tanzu-ingress-uninstall-script.outputs.result }}
        script-arguments: "${{ env.GITOPS_DIR }} tanzu-ingress"
        kubeconfig-contents: "${{ secrets.KUBECONFIG_CONTENTS }}"

    - name: Checkout google-actions
      if: inputs.cluster-provider == 'gke'
      uses: actions/checkout@v4
      with:
        repository: clicktruck/google-actions

    - name: "Uninstall Tanzu Ingress on Google"
      if: inputs.cluster-provider == 'gke'
      uses: ./docker/actions/google/tanzu-runsh-setup-action
      with:
        google-project-id: ${{ secrets.GOOGLE_PROJECT_ID }}
        google-service-account-key: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        script-contents: ${{ needs.encode-tanzu-ingress-uninstall-script.outputs.result }}
        script-arguments: "${{ env.GITOPS_DIR }} tanzu-ingress"
        kubeconfig-contents: "${{ secrets.KUBECONFIG_CONTENTS }}"
